{
	"info": {
		"_postman_id": "3d949c31-b446-45e6-a5bd-125e179d4e25",
		"name": "Racing Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17207272"
	},
	"item": [
		{
			"name": "MS-CARS",
			"item": [
				{
					"name": "Get a car by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/cars/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cars",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/cars",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Car",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"Chevrolet\",\r\n    \"model\": \"Blaze\",\r\n    \"year\": \"2023\",\r\n    \"pilot\": {\r\n        \"name\": \"Marie\",\r\n        \"age\": 25\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/cars/update/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cars",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Car",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"Chevrolet\",\r\n    \"model\": \"Blaze\",\r\n    \"year\": \"2021\",\r\n    \"pilot\": {\r\n        \"name\": \"Marie\",\r\n        \"age\": 25\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/cars/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cars",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Car By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/cars/delete/1{id}1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cars",
								"delete",
								"1{id}1"
							]
						}
					},
					"response": []
				}
			],
			"description": "Car Controller Endpoints\n\n#### 1\\. List All Cars\n\n- **HTTP Method:** GET\n- **Endpoint:** `/v1/cars`\n- **Description:** This endpoint retrieves a list of all cars in the system.\n- **Response:** A list of car objects.\n    \n\n#### 2\\. Get Car by ID\n\n- **HTTP Method:** GET\n- **Endpoint:** `/v1/cars/get/{carId}`\n- **Description:** Retrieves detailed information about a car by its unique ID.\n- **Path Variable:** `{carId}` - The ID of the car to retrieve.\n- **Response:** The car object with the specified ID if found, or a \"Not Found\" message if the car does not exist.\n    \n\n#### 3\\. Create Car\n\n- **HTTP Method:** POST\n- **Endpoint:** `/v1/cars/create`\n- **Description:** Creates a new car with the provided details.\n- **Request Body:** A JSON object containing car information (`CarRequestDTO`).\n- **Response:** The newly created car object along with a `201 Created` status code.\n    \n\n#### 4\\. Update Car\n\n- **HTTP Method:** PUT\n- **Endpoint:** `/v1/cars/update/{carId}`\n- **Description:** Updates an existing car with new details based on its unique ID.\n- **Path Variable:** `{carId}` - The ID of the car to update.\n- **Request Body:** A JSON object containing car information (`CarRequestDTO`).\n- **Response:** The updated car object if successful, or a \"Not Found\" message if the car does not exist.\n    \n\n#### 5\\. Delete Car\n\n- **HTTP Method:** DELETE\n- **Endpoint:** `/v1/cars/delete/{carId}`\n- **Description:** Deletes a car from the system based on its unique ID.\n- **Path Variable:** `{carId}` - The ID of the car to delete.\n- **Response:** A success message indicating that the car with the specified ID has been deleted."
		},
		{
			"name": "MS-RACES",
			"item": [
				{
					"name": "Create Race",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cars\": [\r\n    {\r\n      \"brand\": \"Car Brand 1\",\r\n      \"model\": \"Car Model 1\",\r\n      \"year\": \"2020-01-15\",\r\n      \"pilot\": {\r\n        \"name\": \"Pilot 1\",\r\n        \"age\": 35\r\n      }\r\n    },\r\n    {\r\n      \"brand\": \"Car Brand 2\",\r\n      \"model\": \"Car Model 2\",\r\n      \"year\": \"2021-03-20\",\r\n      \"pilot\": {\r\n        \"name\": \"Pilot 2\",\r\n        \"age\": 32\r\n      }\r\n    },\r\n        {\r\n      \"brand\": \"Car Brand 3\",\r\n      \"model\": \"Car Model 3\",\r\n      \"year\": \"2019-10-24\",\r\n      \"pilot\": {\r\n        \"name\": \"Pilot 3\",\r\n        \"age\": 33\r\n      }\r\n    }\r\n  ],\r\n  \"track\": {\r\n    \"name\": \"Monaco GP\",\r\n    \"country\": \"\",\r\n    \"date\": \"2022-05-03\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/race/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"race",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Simulate a Race by Id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/race/simulate/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"race",
								"simulate",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Race Controller Endpoints\n\n#### 1\\. Create Race\n\n- **HTTP Method:** POST\n    \n- **Endpoint:** `/v1/race/create`\n    \n- **Description:** This endpoint allows the creation of a new race with the provided race details.\n    \n- **Request Body:** A JSON object containing race information (`RaceRequestDTO`).\n    \n- **Response:** The newly created race object along with a `201 Created` status code.\n    \n\n#### 2\\. Simulate Race and Send Result\n\n- **HTTP Method:** POST\n    \n- **Endpoint:** `/v1/race/simulate/{raceId}`\n    \n- **Description:** Initiates the simulation of a race and sends back the race results.\n    \n- **Path Variable:** `{raceId}` - The ID of the race to simulate.\n    \n- **Response:** A list of race result objects (`RaceResultDTO`) along with an `HTTP 200 OK` status code."
		},
		{
			"name": "MS-HISTORY",
			"item": [
				{
					"name": "Get All Results",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/race-results",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"race-results"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Result By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/race-results/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"race-results",
								"get",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Race Result Controller Endpoints\n\n#### 1\\. Get All Race Results\n\n- **HTTP Method:** GET\n    \n- **Endpoint:** `/v1/race-results`\n    \n- **Description:** This endpoint retrieves a list of all race results stored in the system.\n    \n- **Response:** A JSON array containing a list of race result objects (`RaceResultDocument`) along with an `HTTP 200 OK` status code.\n    \n\n#### 2\\. Get Race Result by ID\n\n- **HTTP Method:** GET\n    \n- **Endpoint:** `/v1/race-results/get/{id}`\n    \n- **Description:** Retrieves a specific race result by its unique ID.\n    \n- **Path Variable:** `{id}` - The ID of the race result to retrieve.\n    \n- **Response:** If the race result is found, it returns a JSON object with race result details along with an `HTTP 200 OK` status code. If the race result is not found, it returns an `HTTP 404 Not Found` status code with an error message."
		}
	]
}